# wget https://releases.ubuntu.com/18.04/ubuntu-18.04.6-desktop-amd64.iso

sudo apt install libncurses5-dev libncursesw5-dev build-essential \
                 git tig golang graphviz exuberant-ctags zsh tmux curl \
                 python3-pip ca-certificates gnupg lsb-release clang-format

sudo chsh -s /usr/bin/zsh $USER

sudo add-apt-repository ppa:jonathonf/vim
sudo apt update
sudo apt install vim vim-gtk3

sudo apt install sl figlet cmatrix
sudo gem install lolcat

sudo apt install lm-sensors  # sensor temperature

# sshd server
sudo apt install openssh-server
sudo /etc/init.d/ssh start

####################################
#
# docker
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
  $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

sudo apt-get update
sudo apt-get install docker-ce docker-ce-cli containerd.io

# add docker groups
sudo groupadd docker
sudo usermod -aG docker $USER
newgrp docker

# add docker proxy if necessary
sudo bash -c "cat > /etc/systemd/system/docker.service.d/proxy.conf" <<EOF
[Service]
Environment="HTTP_PROXY=http://myspn:7071/"
Environment="HTTPS_PROXY=http://myspn:7071/"
Environment="NO_PROXY=localhost,127.0.0.1,.example.com"
EOF

sudo systemctl daemon-reload && sudo systemctl restart docker


# docker-compose
sudo curl -L "https://github.com/docker/compose/releases/download/v2.2.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
sudo chmod +x /usr/local/bin/docker-compose
sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose


# kubernetes
curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add
sudo apt-add-repository "deb http://apt.kubernetes.io/ kubernetes-xenial main"
sudo apt-get install kubeadm kubelet kubectl
sudo apt-mark hold kubeadm kubelet kubectl
kubeadm version


# Step 7: Assign Unique Hostname for Each Server Node
sudo hostnamectl set-hostname master-node
sudo hostnamectl set-hostname worker01
# Step 8: Initialize Kubernetes on Master Node
sudo swapoff –a
sudo kubeadm init --pod-network-cidr=10.244.0.0/16
mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config
# Step 9: Deploy Pod Network to Cluster
sudo kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
kubectl get pods --all-namespaces
# Step 10: Join Worker Node to Cluster
kubeadm join --discovery-token abcdef.1234567890abcdef --discovery-token-ca-cert-hash sha256:1234..cdef 1.2.3.4:6443
kubectl get nodes


####################################################
# Java 8
sudo apt install openjdk-8-jdk

# psql
sudo apt install postgresql-client

# Starship
curl -fsSL https://starship.rs/install.sh | zsh


# switch default python to python3
sudo ln -sfn /usr/bin/python3 /usr/bin/python
sudo ln -s `which pip3` /usr/bin/pip


# yarn
curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
sudo apt update && sudo apt install yarn

###########################################
# JavaScript
#
# node.js
curl -fsSL https://deb.nodesource.com/setup_15.x | sudo -E bash -
sudo apt-get install -y nodejs
# tsc
npm install -g typescript
npm install --global yarn

###########################################
# Samba Server
sudo apt install samba
smbd --version

#.为smb添加用户及设置密码
sudo smbpasswd -a <username>

# Add a new samba point
sudo echo "

[mysmb]                    # 共享时网络上显示的名称
path = /home/mysmbshare    # 共享路径
guest ok = no              # 匿名访问
comment = smb share        # 注释信息
available = yes            # vailable用来指定该共享资源是否可用
browseable = yes           # browseable用来指定该共享是否可以浏览
public    = yes            # public用来指定该共享是否允许guest账户访问
writeable = yes            # writable用来指定该共享路径是否可写
">> /etc/samba/smb.conf

###########################################
# Bazelisk install
go install github.com/bazelbuild/bazelisk@latest

# Bazel install
sudo apt install apt-transport-https curl gnupg
curl -fsSL https://bazel.build/bazel-release.pub.gpg | gpg --dearmor > bazel.gpg
sudo mv bazel.gpg /etc/apt/trusted.gpg.d/
echo "deb [arch=amd64] https://storage.googleapis.com/bazel-apt stable jdk1.8" | sudo tee /etc/apt/sources.list.d/bazel.list
sudo apt update && sudo apt install bazel

# buildifier
wget https://github.com/bazelbuild/buildtools/releases/download/4.2.5/buildifier-linux-amd64
mv buildifier-linux-amd64 /usr/local/bin/buildifier


###########################################
#
# Desktop OS Applications
#

# Drivers
sudo apt-get install -y webcam

######################################
#
# Cinnamon (3rd Party Desktop System)
sudo add-apt-repository ppa:embrosyn/cinnamon
sudo apt update
sudo apt install cinnamon


######################################
# Input method
sudo apt-get install fcitx fcitx-table-al
sudo apt-get install fcitx-configtool fcitx-config-gtk

sudo apt install joystick joy2key
sudo modprobe joydev

# Bluetooth
sudo service bluetooth start
sudo apt-get install blueman -y && blueman-manager

# Fingerprint scanner
sudo add-apt-repository ppa:fingerprint/fingerprint-gui
sudo apt update
sudo apt upgrade -y
sudo apt-get install libbsapi policykit-1-fingerprint-gui fingerprint-gui

sudo apt remove fprintd
sudo add-apt-repository ppa:uunicorn/open-fprintd
sudo apt-get update
sudo apt install open-fprintd fprintd-clients python3-validity
fprintd-enroll
sudo pam-auth-update

# Add support for exfat FS
sudo apt-get install exfat-fuse

# Virtual Display
cd ~
git clone https://github.com/dianariyanto/virtual-display-linux.git
cd virtual-display-linux
sudo chmod +x vdl-monitor
# Change your own resolution setup vdl-monitor.conf.
./vdl-monitor
# For first running, you will prompt to reboot or relogin current session.
cd ~/virtual-display-linux/
./vdl-monitor


# Terminator
sudo apt install terminator

# Chrome
wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
sudo apt install ./google-chrome-stable_current_amd64.deb


# Edge
sudo apt update
sudo apt install software-properties-common apt-transport-https wget
wget -q https://packages.microsoft.com/keys/microsoft.asc -O- | sudo apt-key add -
sudo add-apt-repository "deb [arch=amd64] https://packages.microsoft.com/repos/edge stable main"
sudo apt install microsoft-edge-dev


# Goldendict
sudo apt install goldendict goldendict-wordnet

# Flameshot
sudo snap install flameshot
#
# sudo apt install flameshot
# sudo ln -s /snap/bin/flameshot /usr/bin/flameshot
# add shortcut in system configure-> keyboard ->shortcut
# Name: Screen snap; Command: flameshot gui; Shortcut: Ctrl+Super+A




# xclip
sudo apt install xclip

# Kazam
sudo add-apt-repository ppa:sylvain-pineau/kazam
sudo apt-get update
sudo apt install kazam

# Sublime Text 2
sudo snap install sublime-text --classic # or the follows
#curl -fsSL https://download.sublimetext.com/sublimehq-pub.gpg | sudo apt-key add -
#sudo add-apt-repository "deb https://download.sublimetext.com/ apt/stable/"
#sudo apt update
#sudo apt install sublime-text

# CopyQ
sudo add-apt-repository ppa:hluk/copyq
sudo apt update
sudo apt install copyq

# Yinxiangbiji
sudo add-apt-repository ppa:nvbn-rm/ppa
sudo apt-get update
sudo apt-get install everpad

# Typora
sudo add-apt-repository 'deb https://typora.io linux/'
sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys BA300B7755AFCFAE
sudo apt update
sudo apt install typora

# Qt
sudo add-apt-repository ppa:beineri/opt-qt-5.15.2-bionic
sudo apt-get update
sudo apt install qt5153d qtcreator

# barrier
sudo snap install barrier

# VS Code
sudo snap install code --classic

# Vbox 6.1
wget -q https://www.virtualbox.org/download/oracle_vbox_2016.asc -O- | sudo apt-key add -
wget -q https://www.virtualbox.org/download/oracle_vbox.asc -O- | sudo apt-key add -
sudo add-apt-repository "deb http://download.virtualbox.org/virtualbox/debian bionic contrib"
sudo apt update
sudo apt install virtualbox-6.1


# slack
sudo snap install slack --classic

# Microsoft Office 365
sudo snap install --beta office365webdesktop

# To fix the dpkg error report
sudo apt-get update --fix-missing
sudo apt-get autoremove && sudo apt-get clean && sudo apt-get install -f

# sudo vim /etc/apt/sources.list
# lsof /var/lib/dpkg/lock /var/lib/apt/lists/lock /var/cache/apt/archives/lock
# sudo rm /var/lib/dpkg/lock /var/lib/apt/lists/lock /var/cache/apt/archives/lock
# sudo dpkg --configure -a
# sudo lsof /var/lib/dpkg/lock-frontend
# sudo rm /var/lib/dpkg/lock-frontend

# Gtk Wave Cleaner
sudo apt-get install gwc

#######################################################
#
# Manipulate GUI in Shell
#
xlsclients
xwininfo
xwininfo -name xxxx -id 0xXXXX -all
xprop
xrandr -o right -s 1440x2560
sudo apt install xdotool

xwininfo -name 'dclock'
xprop -id 0x7400005 -format _NET_WM_STATE 32a -set _NET_WM_STATE _NET_WM_STATE_ABOVE
xprop -id 0x7400005 -format _MOTIF_WM_HINTS 32c -set _MOTIF_WM_HINTS 2
xdotool windowmove --sync 0x7400005 1287 2465
xdotool windowsize --sync 0x7400005 96 44

#######################################################
# Remote desktop
#
# remmina (VNC/RDP)
sudo snap install remmina
sudo snap connect remmina:audio-record :audio-record
sudo snap connect remmina:avahi-observe :avahi-observe
sudo snap connect remmina:cups-control :cups-control
sudo snap connect remmina:mount-observe :mount-observe
sudo snap connect remmina:password-manager-service :password-manager-service
sudo snap connect remmina:ssh-keys :ssh-keys
sudo snap connect remmina:ssh-public-keys :ssh-public-keys

# NoMachine
# https://www.nomachine.com/download/download&id=3

######################################################
# Setup a printer service
sudo apt install cups aptitude
sudo aptitude install ghostscript foomatic
cp /etc/cups/cupsd.conf /etc/cups/cupsd.conf.bak
vim /etc/cups/cupsd.conf

#将监听地址改成服务器ip，或者0.0.0.0，不然无法访问
Listen localhost:631
#本配置文件采用了apache的配置文件语法，在Order allow,deny下添加Allow all，例如：
<Location />
  Order allow,deny
  Allow all
</Location>
