# wget https://releases.ubuntu.com/18.04/ubuntu-18.04.6-desktop-amd64.iso


sudo apt install libncurses5-dev libncursesw5-dev build-essential \
                 git tig golang graphviz exuberant-ctags zsh tmux curl \
                 python3-pip ca-certificates gnupg lsb-release clang-format

sudo chsh -s /usr/bin/zsh $USER

sudo add-apt-repository ppa:jonathonf/vim
sudo apt update
sudo apt install vim vim-gtk3


# docker 
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
  $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

sudo apt-get update
sudo apt-get install docker-ce docker-ce-cli containerd.io


# kubernetes
curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add
sudo apt-add-repository "deb http://apt.kubernetes.io/ kubernetes-xenial main"
sudo apt-get install kubeadm kubelet kubectl
sudo apt-mark hold kubeadm kubelet kubectl
kubeadm version

sudo swapoff –a

# Step 7: Assign Unique Hostname for Each Server Node
sudo hostnamectl set-hostname master-node
sudo hostnamectl set-hostname worker01
# Step 8: Initialize Kubernetes on Master Node
sudo kubeadm init --pod-network-cidr=10.244.0.0/16
mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config
# Step 9: Deploy Pod Network to Cluster
sudo kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
kubectl get pods --all-namespaces
# Step 10: Join Worker Node to Cluster
kubeadm join --discovery-token abcdef.1234567890abcdef --discovery-token-ca-cert-hash sha256:1234..cdef 1.2.3.4:6443
kubectl get nodes




# Starship
curl -fsSL https://starship.rs/install.sh | zsh


# switch default python to python3
sudo ln -sfn /usr/bin/python3 /usr/bin/python
sudo ln -s `which pip3` /usr/bin/pip

# sshd server
sudo apt install openssh-server
sudo /etc/init.d/ssh start

###########################################
# Samba Server
sudo apt install samba
smbd --version

#.为smb添加用户及设置密码
sudo smbpasswd -a <username>

# Add a new samba point
sudo echo "

[mysmb] #共享时网络上显示的名称
path = /home/mysmbshare #共享路径
guest ok = no    #匿名访问
comment = smb share     #注释信息
available = yes         #vailable用来指定该共享资源是否可用
browseable = yes        #browseable用来指定该共享是否可以浏览
public    = yes         #public用来指定该共享是否允许guest账户访问
writeable = yes         #writable用来指定该共享路径是否可写
">> /etc/samba/smb.conf

# Bazelisk install
go install github.com/bazelbuild/bazelisk@latest

# Bazel install
sudo apt install apt-transport-https curl gnupg
curl -fsSL https://bazel.build/bazel-release.pub.gpg | gpg --dearmor > bazel.gpg
sudo mv bazel.gpg /etc/apt/trusted.gpg.d/
echo "deb [arch=amd64] https://storage.googleapis.com/bazel-apt stable jdk1.8" | sudo tee /etc/apt/sources.list.d/bazel.list
sudo apt update && sudo apt install bazel

wget https://github.com/bazelbuild/buildtools/releases/download/4.2.5/buildifier-linux-amd64
mv buildifier-linux-amd64 /usr/local/bin/buildifier


###########################################
#
# Desktop OS Applications
#

sudo add-apt-repository ppa:embrosyn/cinnamon
sudo apt update
sudo apt install cinnamon


sudo apt-get install fcitx fcitx-table-al 
sudo apt-get install fcitx-configtool fcitx-config-gtk 

sudo apt install joystick joy2key
sudo modprobe joydev

# Chrome
wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
sudo apt install ./google-chrome-stable_current_amd64.deb

# Goldendict
sudo apt install goldendict goldendict-wordnet

# flameshot
sudo apt install flameshot
# add shortcut in system configure-> keyboard ->shortcut
# Name: Screen snap; Command: flameshot gui; Shortcut: Ctrl+Alt+A


# Sublime Text 2
sudo snap install sublime-text --classic # or the follows
#curl -fsSL https://download.sublimetext.com/sublimehq-pub.gpg | sudo apt-key add -
#sudo add-apt-repository "deb https://download.sublimetext.com/ apt/stable/"
#sudo apt update
#sudo apt install sublime-text

# CopyQ
sudo add-apt-repository ppa:hluk/copyq
sudo apt update
sudo apt install copyq

# Yinxiangbiji
sudo add-apt-repository ppa:nvbn-rm/ppa
sudo apt-get update
sudo apt-get install everpad

# Typora
sudo add-apt-repository 'deb https://typora.io linux/'
sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys BA300B7755AFCFAE
sudo apt update
sudo apt install typora

# Qt
sudo add-apt-repository ppa:beineri/opt-qt-5.15.2-bionic
sudo apt-get update
sudo apt install qt5153d qtcreator

# barrier
sudo snap install barrier

# VS Code
sudo snap install code --classic

# Vbox 6.1
wget -q https://www.virtualbox.org/download/oracle_vbox_2016.asc -O- | sudo apt-key add -
wget -q https://www.virtualbox.org/download/oracle_vbox.asc -O- | sudo apt-key add -
sudo add-apt-repository "deb http://download.virtualbox.org/virtualbox/debian bionic contrib"
sudo apt update
sudo apt install virtualbox-6.1


# slack
sudo snap install slack --classic
# Microsoft Office 365
sudo snap install --beta office365webdesktop

# To fix the dpkg error report
sudo apt-get update --fix-missing
sudo apt-get autoremove && sudo apt-get clean && sudo apt-get install -f

# Printer service
sudo apt install cups aptitude
sudo aptitude install ghostscript  foomatic
cp /etc/cups/cupsd.conf /etc/cups/cupsd.conf.bak
vim /etc/cups/cupsd.conf
	#将监听地址改成服务器ip，或者0.0.0.0，不然无法访问
	Listen localhost:631
	#本配置文件采用了apache的配置文件语法，在Order allow,deny下添加Allow all，例如：
	<Location />
	  Order allow,deny
	  Allow all
	</Location>



###################################################
##
##	Python
##
pip install opencv-python numpy matplotlib pytorch